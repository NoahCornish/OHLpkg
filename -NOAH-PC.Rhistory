Rookie = "rookie",
JN = "jersey_number",
BD = "birthdate",
BD_Y = "birthdate_year",
Hgt = "height",
Wgt = "weight",
Pos = "position",
Team = "team_name",
GP = "games_played",
G = "goals",
A = "assists",
PTS = "points",
`Pts/G` = "points_per_game",
`+/-` = "plus_minus",
PPG = "power_play_goals",
PPA = "power_play_assists",
PPP = "power_play_points",
SHG = "short_handed_goals",
SHA = "short_handed_assists",
SHPTS = "short_handed_points",
GWG = "game_winning_goals",
ENG = "empty_net_goals",
PIM = "penalty_minutes",
Active = "active") %>%
filter(Active == 1) %>%
filter(GP > 9) %>%
mutate(PPP = PPG + PPA) %>%
filter(Pos != "G")
#assign rookie values as YES or No instead of binary (1, 0)
LeagueStats$Rookie <- gsub('1', 'YES', LeagueStats$Rookie)
LeagueStats$Rookie <- gsub('0', 'NO', LeagueStats$Rookie)
#fix and adjust the BD column
LeagueStats$BD <- gsub(",", "", LeagueStats$BD)
LeagueStats$BD <- as.POSIXct(LeagueStats$BD, format='%B %d %Y')
LeagueStats$BD <- as.Date(LeagueStats$BD, format = "%d-%b-%Y")
RKStats <- LeagueStats %>%
filter(Rookie == "YES") %>%
select(Name, BD, Pos, Team, GP, G,
A, PTS, `Pts/G`, `+/-`, PPG,
PPA, GWG, ENG, PIM)
return(RKStats)
}
get_Teams <- function(Teams){
library(rsconnect)
library(ggplot2)
library(tidyverse)
library(janitor)
library(lubridate)
library(RJSONIO)
library(jsonlite)
library(dplyr)
library(scales)
url_reg <- "https://lscluster.hockeytech.com/feed/?feed=modulekit&view=statviewtype&type=topscorers&key=2976319eb44abe94&fmt=json&client_code=ohl&lang=en&league_code=&season_id=76&first=0&limit=50000&sort=active&stat=all&order_direction="
# use jsonlite::fromJSON to handle NULL values
json_data <- jsonlite::fromJSON(url_reg, simplifyDataFrame = TRUE)
# create data frame
df <- json_data[["SiteKit"]][["Statviewtype"]] %>%
select(rank, player_id:num_teams) %>%
select(-c(birthtown, birthprov, birthcntry,
loose_ball_recoveries, caused_turnovers, turnovers,
phonetic_name, last_years_club, suspension_games_remaining,
suspension_indefinite)) %>%
mutate(player_id = as.numeric(player_id)) %>%
mutate(across(active:age, ~as.numeric(.))) %>%
mutate(across(rookie:jersey_number, ~as.numeric(.))) %>%
mutate(team_id = as.numeric(team_id)) %>%
mutate(across(games_played:faceoff_pct, ~as.numeric(.))) %>%
mutate(across(shots_on:num_teams, ~as.numeric(.))) %>%
mutate(birthdate_year = stringr::str_split(birthdate_year,
"\\'", simplify = TRUE, n = 2)[,2]) %>%
mutate(birthdate_year = as.numeric(birthdate_year)) %>%
mutate(birthdate_year = 2000 + birthdate_year)
# create data frame with columns required for tableau viz
LeagueStats <- df %>%
select(Name = "name",
Rookie = "rookie",
JN = "jersey_number",
BD = "birthdate",
BD_Y = "birthdate_year",
Hgt = "height",
Wgt = "weight",
Pos = "position",
Team = "team_name",
GP = "games_played",
G = "goals",
A = "assists",
PTS = "points",
`Pts/G` = "points_per_game",
`+/-` = "plus_minus",
PPG = "power_play_goals",
PPA = "power_play_assists",
PPP = "power_play_points",
SHG = "short_handed_goals",
SHA = "short_handed_assists",
SHPTS = "short_handed_points",
GWG = "game_winning_goals",
ENG = "empty_net_goals",
PIM = "penalty_minutes",
Active = "active") %>%
filter(Active == 1) %>%
filter(GP > 9) %>%
mutate(PPP = PPG + PPA) %>%
filter(Pos != "G")
#assign rookie values as YES or No instead of binary (1, 0)
LeagueStats$Rookie <- gsub('1', 'YES', LeagueStats$Rookie)
LeagueStats$Rookie <- gsub('0', 'NO', LeagueStats$Rookie)
#fix and adjust the BD column
LeagueStats$BD <- gsub(",", "", LeagueStats$BD)
LeagueStats$BD <- as.POSIXct(LeagueStats$BD, format='%B %d %Y')
LeagueStats$BD <- as.Date(LeagueStats$BD, format = "%d-%b-%Y")
Teams <- distinct(LeagueStats, Team)
return(Teams)
}
View(get_AllStats)
library(OHLpkg)
devtools::install_github('NoahCornish/OHLpkg')
library(OHLpkg)
a <- get_AllStats()
a <- get_AllStats()
library(OHLpkg)
library(OHLpkg)
library(OHLpkg)
a <- get_AllStats()
library(OHLpkg)
get_RawStats <- function(AllStats){
library(rsconnect)
library(ggplot2)
library(tidyverse)
library(janitor)
library(lubridate)
library(RJSONIO)
library(jsonlite)
library(dplyr)
library(scales)
url_reg <- "https://lscluster.hockeytech.com/feed/?feed=modulekit&view=statviewtype&type=topscorers&key=2976319eb44abe94&fmt=json&client_code=ohl&lang=en&league_code=&season_id=76&first=0&limit=50000&sort=active&stat=all&order_direction="
# use jsonlite::fromJSON to handle NULL values
json_data <- jsonlite::fromJSON(url_reg, simplifyDataFrame = TRUE)
# create data frame
df <- json_data[["SiteKit"]][["Statviewtype"]] %>%
select(rank, player_id:num_teams) %>%
select(-c(birthtown, birthprov, birthcntry,
loose_ball_recoveries, caused_turnovers, turnovers,
phonetic_name, last_years_club, suspension_games_remaining,
suspension_indefinite)) %>%
mutate(player_id = as.numeric(player_id)) %>%
mutate(across(active:age, ~as.numeric(.))) %>%
mutate(across(rookie:jersey_number, ~as.numeric(.))) %>%
mutate(team_id = as.numeric(team_id)) %>%
mutate(across(games_played:faceoff_pct, ~as.numeric(.))) %>%
mutate(across(shots_on:num_teams, ~as.numeric(.))) %>%
mutate(birthdate_year = stringr::str_split(birthdate_year,
"\\'", simplify = TRUE, n = 2)[,2]) %>%
mutate(birthdate_year = as.numeric(birthdate_year)) %>%
mutate(birthdate_year = 2000 + birthdate_year)
# create data frame with columns required for tableau viz
AllStats <- df %>%
select(Name = "name",
Rookie = "rookie",
JN = "jersey_number",
BD = "birthdate",
BD_Y = "birthdate_year",
Hgt = "height",
Wgt = "weight",
Pos = "position",
Team = "team_name",
GP = "games_played",
G = "goals",
A = "assists",
PTS = "points",
`Pts/G` = "points_per_game",
`+/-` = "plus_minus",
PPG = "power_play_goals",
PPA = "power_play_assists",
PPP = "power_play_points",
SHG = "short_handed_goals",
SHA = "short_handed_assists",
SHPTS = "short_handed_points",
GWG = "game_winning_goals",
ENG = "empty_net_goals",
PIM = "penalty_minutes",
Active = "active") %>%
filter(Active == 1) %>%
#filter(GP > 9) %>%
mutate(PPP = PPG + PPA) %>%
#filter(Pos != "G")
#assign rookie values as YES or No instead of binary (1, 0)
AllStats$Rookie <- gsub('1', 'YES', AllStats$Rookie)
AllStats$Rookie <- gsub('0', 'NO', AllStats$Rookie)
#fix and adjust the BD column
AllStats$BD <- gsub(",", "", AllStats$BD)
AllStats$BD <- as.POSIXct(AllStats$BD, format='%B %d %Y')
AllStats$BD <- as.Date(AllStats$BD, format = "%d-%b-%Y")
return(AllStats)
}
devtools::install_github('NoahCornish/OHLpkg')
library(OHLpkg)
a <- get_AllStats()
a <- get_RawStats()
library(OHLpkg)
library(OHLpkg)
devtools::install_github('NoahCornish/OHLpkg')
library(OHLpkg)
a <- get_RawStats()
library(OHLpkg)
devtools::install_github('NoahCornish/OHLpkg')
library(OHLpkg)
a <- get_RawStats()
library(OHLpkg)
devtools::install_github('NoahCornish/OHLpkg')
library(OHLpkg)
a <- get_RawStats()
b <- get_Stats()
a <- get_RawStats()
library(OHLpkg)
library(OHLpkg)
a <- get_RawStats()
devtools::install_github('NoahCornish/OHLpkg')
library(OHLpkg)
a <- get_RawStats()
library(OHLpkg)
get_u17Skaters <- function(api_key, draft_year, birth_year) {
library(tidyverse)
library(janitor)
library(httr)
library(jsonlite)
# CODE TO GET DRAFTED PLAYERS
draft_url <- paste0("https://api.eliteprospects.com/v1/draft-types/ohl-priority-selection/selections?offset=0&limit=400&sort=-year&apiKey=", api_key)
draft_api_call <- GET(draft_url)
draft_api_char <- base::rawToChar(draft_api_call$content)
draft_api_json <- jsonlite::fromJSON(draft_api_char, flatten = TRUE)
drafted_players <- as_tibble(draft_api_json[["data"]]) %>%
clean_names() %>%
filter(year == draft_year) %>%
select(round, overall,
drafted_team = "team_name",
eliteID = "player_id")
# CODE TO GET U17 PLAYER STATS EXCLUDING THE OHL
leagues <- tibble(
league = c("OJHL", "CCHL", "NOJHL", "GOJHL", "EOJHL",
"NCJHL", "PJCHL", "OMHA U18",
"ALLIANCE U18", "GNML", "GTHL U18", "HEO U18")
)
ages <- tibble(
birthYear = c(birth_year)
)
pb_count <- nrow(ages)
tmsleep <- sample(2:4, 1)
pb <- txtProgressBar(min = 0, max = pb_count, style = 3)
u17_skaters_stats <- NULL
for (i in 1:nrow(ages)) {
birthYear <- as.character(ages[i, 1])
for (j in 1:nrow(leagues)) {
league_name <- as.character(leagues[j, 1])
str1 <- "https://api.eliteprospects.com/v1/leagues/"
str2 <- "/player-stats?offset=0&limit=400&apiKey="
str3 <- "&player.yearOfBirth="
str4 <- "&sort=-regularStats.PTS"
url <- paste0(str1, URLencode(league_name), str2, api_key, str3, birthYear, str4)
print(url) # Print the URL for debugging
api_call <- GET(url)
api_char <- base::rawToChar(api_call$content)
api_json <- jsonlite::fromJSON(api_char, flatten = TRUE)
df <- as_tibble(api_json[["data"]]) %>%
clean_names() %>%
filter(season_start_year == "2023",
player_position != "G") %>%
select(team_name,
eliteID = "player_id",
name = "player_name",
pos = "player_position",
dob = "player_date_of_birth",
gp = "regular_stats_gp",
g = "regular_stats_g",
a = "regular_stats_a",
pts = "regular_stats_pts",
pim = "regular_stats_pim",
ppg = "regular_stats_ppg") %>%
mutate_if(is.integer, as.numeric) %>%
mutate_if(is.numeric, ~replace(., is.na(.), 0)) %>%
mutate(league_name = league_name) %>%
select(eliteID:dob, team_name, league_name,
gp:ppg)
u17_skaters_stats <- bind_rows(u17_skaters_stats, df)
setTxtProgressBar(pb, i)
}
}
u17_skaters <- u17_skaters_stats %>%
left_join(drafted_players, by = "eliteID") %>%
select(eliteID:dob, drafted_team, round, overall, team_name:ppg) %>%
mutate(across(where(is.numeric), ~replace_na(.x, 0))) %>%
mutate(across(where(is.character), ~replace_na(.x, "not available"))) %>%
mutate(drafted_team = case_when(
drafted_team == "not available" ~ "not drafted",
TRUE ~ as.character(drafted_team)
))
return(u17_skaters)
}
library(OHLpkg)
devtools::install_github('NoahCornish/OHLpkg')
library(OHLpkg)
a <- get_RawStats()
b <- get_Stats()
a <- get_RawStats()
b <- get_Stats()
c <- get_EVStats()
d <- get_DYStats()
e <- get_RKStats()
f <- get_Teams()
g <- get_u17Skaters()
library(OHLpkg)
devtools::install_github('NoahCornish/OHLpkg')
library(OHLpkg)
a <- get_Stats()
b <- get_EVStats()
c <- get_DYStats()
d <- get_RKStats()
e <- get_Teams()
f <- get_u17Skaters()
View(f)
library(OHLpkg)
devtools::install_github('NoahCornish/OHLpkg')
library(OHLpkg)
a <- get_Stats()
b <- get_EVStats()
c <- get_DYStats()
d <- get_RKStats()
e <- get_Teams()
f <- get_u17Skaters()
g <- get_Prospects()
View(g)
library(OHLpkg)
devtools::install_github('NoahCornish/OHLpkg')
library(OHLpkg)
a <- get_Stats()
b <- get_EVStats()
c <- get_DYStats()
d <- get_RKStats()
e <- get_Teams()
f <- get_u17Skaters()
View(e)
Stats <- get_Stats()
EVStats <- get_EVStats()
DraftYearStats <- get_DYStats()
RookieStats <- get_RKStats()
OHLTeams <- get_Teams()
View(Stats)
devtools::install_github('NoahCornish/OHLpkg')
library(OHLpkg)
Stats <- get_Stats()
EVStats <- get_EVStats()
DraftYearStats <- get_DYStats()
RookieStats <- get_RKStats()
OHLTeams <- get_Teams()
View(DraftYearStats)
View(Stats)
devtools::install_github('NoahCornish/OHLpkg')
library(OHLpkg)
Stats <- get_Stats()
EVStats <- get_EVStats()
SHStats <- get_SHStats()
devtools::install_github('NoahCornish/OHLpkg')
force = TRUE
library(OHLpkg)
Stats <- get_Stats()
EVStats <- get_EVStats()
SHStats <- get_SHStats()
DraftYearStats <- get_DYStats()
RookieStats <- get_RKStats()
OHLTeams <- get_Teams()
library(OHLpkg)
library(OHLpkg)
Stats <- get_Stats()
EVStats <- get_EVStats()
SHStats <- get_SHStats()
DraftYearStats <- get_DYStats()
RookieStats <- get_RKStats()
OHLTeams <- get_Teams()
View(SHStats)
library(OHLpkg)
devtools::install_github('NoahCornish/OHLpkg')
library(OHLpkg)
Stats <- get_Stats()
EVStats <- get_EVStats()
SHStats <- get_SHStats()
DraftYearStats <- get_DYStats()
RookieStats <- get_RKStats()
OHLTeams <- get_Teams()
library(OHLpkg)
devtools::document()
View(OHLTeams)
R CMD check --as-cran OHLpkg.tar.gz
system("R CMD build OHLpkg")
setwd("C:\Users\noahc\OneDrive\Documents\OHLpkg")
library(OHLpkg)
library(OHLpkg)
Stats <- get_Stats()
EVStats <- get_EVStats()
SHStats <- get_SHStats()
DraftYearStats <- get_DYStats()
RookieStats <- get_RKStats()
OHLTeams <- get_Teams()
library(OHLpkg)
url_schedule <- "https://lscluster.hockeytech.com/feed/?feed=modulekit&view=scorebar&client_code=ohl&numberofdaysahead=5000&numberofdaysback=0&season_id=76&team_id=&key=f1aa699db3d81487"
json_data_schedule <- jsonlite::fromJSON(url_schedule, simplifyDataFrame = TRUE)
df_schedule <- json_data_schedule[["SiteKit"]][["Scorebar"]] %>%
select(Date, ScheduledFormattedTime, HomeLongName,
VisitorLongName) %>%
select(Date = "Date",
Time = "ScheduledFormattedTime",
`Home Team` = "HomeLongName",
`Away Team` = "VisitorLongName")
library(rsconnect)
library(ggplot2)
library(tidyverse)
library(janitor)
library(lubridate)
library(RJSONIO)
library(jsonlite)
library(dplyr)
library(scales)
library(httr)
library(purrr)
library(rvest)
library(furrr)
library(devtools)
url_schedule <- "https://lscluster.hockeytech.com/feed/?feed=modulekit&view=scorebar&client_code=ohl&numberofdaysahead=5000&numberofdaysback=0&season_id=76&team_id=&key=f1aa699db3d81487"
json_data_schedule <- jsonlite::fromJSON(url_schedule, simplifyDataFrame = TRUE)
df_schedule <- json_data_schedule[["SiteKit"]][["Scorebar"]] %>%
select(Date, ScheduledFormattedTime, HomeLongName,
VisitorLongName) %>%
select(Date = "Date",
Time = "ScheduledFormattedTime",
`Home Team` = "HomeLongName",
`Away Team` = "VisitorLongName")
View(df_schedule)
View(df_schedule)
url_schedule <- "https://lscluster.hockeytech.com/feed/?feed=modulekit&view=scorebar&client_code=ohl&numberofdaysahead=5000&numberofdaysback=0&season_id=76&team_id=&key=f1aa699db3d81487"
json_data_schedule <- jsonlite::fromJSON(url_schedule, simplifyDataFrame = TRUE)
df_schedule <- json_data_schedule[["SiteKit"]][["Scorebar"]]
View(df_schedule)
url_schedule <- "https://lscluster.hockeytech.com/feed/?feed=modulekit&view=scorebar&client_code=ohl&numberofdaysahead=5000&numberofdaysback=5000&season_id=76&team_id=&key=f1aa699db3d81487"
json_data_schedule <- jsonlite::fromJSON(url_schedule, simplifyDataFrame = TRUE)
df_schedule <- json_data_schedule[["SiteKit"]][["Scorebar"]]
View(df_schedule)
url_schedule <- "https://lscluster.hockeytech.com/feed/?feed=modulekit&view=scorebar&client_code=ohl&numberofdaysahead=&numberofdaysback=&season_id=76&team_id=&key=f1aa699db3d81487"
json_data_schedule <- jsonlite::fromJSON(url_schedule, simplifyDataFrame = TRUE)
df_schedule <- json_data_schedule[["SiteKit"]][["Scorebar"]]
url_schedule <- "https://lscluster.hockeytech.com/feed/?feed=modulekit&view=scorebar&client_code=ohl&numberofdaysahead=100&numberofdaysback=110&season_id=76&team_id=&key=f1aa699db3d81487"
json_data_schedule <- jsonlite::fromJSON(url_schedule, simplifyDataFrame = TRUE)
df_schedule <- json_data_schedule[["SiteKit"]][["Scorebar"]]
View(df_schedule)
url_schedule <- "https://lscluster.hockeytech.com/feed/?feed=modulekit&view=scorebar&client_code=ohl&numberofdaysahead=100&numberofdaysback=30&season_id=76&team_id=&key=f1aa699db3d81487"
json_data_schedule <- jsonlite::fromJSON(url_schedule, simplifyDataFrame = TRUE)
df_schedule <- json_data_schedule[["SiteKit"]][["Scorebar"]]
url_schedule <- "https://lscluster.hockeytech.com/feed/?feed=modulekit&view=scorebar&client_code=ohl&numberofdaysahead=100&numberofdaysback=90&season_id=76&team_id=&key=f1aa699db3d81487"
json_data_schedule <- jsonlite::fromJSON(url_schedule, simplifyDataFrame = TRUE)
df_schedule <- json_data_schedule[["SiteKit"]][["Scorebar"]]
df_schedule <- json_data_schedule[["SiteKit"]][["Scorebar"]] %>%
filter(Date == "2023-09-28")
url_schedule <- "https://lscluster.hockeytech.com/feed/?feed=modulekit&view=scorebar&client_code=ohl&numberofdaysahead=100&numberofdaysback=90&season_id=76&team_id=&key=f1aa699db3d81487"
json_data_schedule <- jsonlite::fromJSON(url_schedule, simplifyDataFrame = TRUE)
df_schedule <- json_data_schedule[["SiteKit"]][["Scorebar"]] %>%
filter(Date >= "2023-09-28")
url_schedule <- "https://lscluster.hockeytech.com/feed/?feed=modulekit&view=scorebar&client_code=ohl&numberofdaysahead=100&numberofdaysback=90&season_id=76&team_id=&key=f1aa699db3d81487"
json_data_schedule <- jsonlite::fromJSON(url_schedule, simplifyDataFrame = TRUE)
df_schedule <- json_data_schedule[["SiteKit"]][["Scorebar"]] %>%
filter(Date >= "2023-09-28")
select(Date, ScheduledFormattedTime, HomeLongName, HomeGoals,
VisitorLongName, VisitorGoals)
url_schedule <- "https://lscluster.hockeytech.com/feed/?feed=modulekit&view=scorebar&client_code=ohl&numberofdaysahead=100&numberofdaysback=90&season_id=76&team_id=&key=f1aa699db3d81487"
json_data_schedule <- jsonlite::fromJSON(url_schedule, simplifyDataFrame = TRUE)
df_schedule <- json_data_schedule[["SiteKit"]][["Scorebar"]] %>%
filter(Date >= "2023-09-28") %>%
select(Date, ScheduledFormattedTime, HomeLongName, HomeGoals,
VisitorLongName, VisitorGoals)
View(df_schedule)
url_schedule <- "https://lscluster.hockeytech.com/feed/?feed=modulekit&view=scorebar&client_code=ohl&numberofdaysahead=100&numberofdaysback=90&season_id=76&team_id=&key=f1aa699db3d81487"
json_data_schedule <- jsonlite::fromJSON(url_schedule, simplifyDataFrame = TRUE)
df_schedule <- json_data_schedule[["SiteKit"]][["Scorebar"]] %>%
filter(Date >= "2023-09-28")
library(rsconnect)
library(ggplot2)
library(tidyverse)
library(janitor)
library(lubridate)
library(RJSONIO)
library(jsonlite)
library(dplyr)
library(scales)
library(httr)
library(purrr)
library(rvest)
library(furrr)
library(devtools)
url_schedule <- "https://lscluster.hockeytech.com/feed/?feed=modulekit&view=scorebar&client_code=ohl&numberofdaysahead=100&numberofdaysback=90&season_id=76&team_id=&key=f1aa699db3d81487"
json_data_schedule <- jsonlite::fromJSON(url_schedule, simplifyDataFrame = TRUE)
df_schedule <- json_data_schedule[["SiteKit"]][["Scorebar"]] %>%
filter(Date >= "2023-09-28") %>%
select(Date, ID, ScheduledFormattedTime,
HomeLongName, HomeGoals,
VisitorLongName, VisitorGoals)
View(df_schedule)
library(OHLpkg)
library(OHLpkg)
Stats <- get_Stats()
EVStats <- get_EVStats()
SHStats <- get_SHStats()
DraftYearStats <- get_DYStats()
RookieStats <- get_RKStats()
OHLTeams <- get_Teams()
OHLSchedule <- get_Schedule()
View(OHLSchedule)
